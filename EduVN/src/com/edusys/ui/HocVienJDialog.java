/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

import com.edusys.dao.ChuyenDeDAO;
import com.edusys.dao.HocVienDAO;
import com.edusys.dao.KhoaHocDAO;
import com.edusys.dao.NguoiHocDAO;
import com.edusys.entity.ChuyenDe;
import com.edusys.entity.HocVien;
import com.edusys.entity.KhoaHoc;
import com.edusys.entity.NguoiHoc;
import com.edusys.utils.Auth;
import com.edusys.utils.MsgBox;
import com.edusys.utils.XMail;
import com.edusys.utils.XVerify;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author phuho
 */
public class HocVienJDialog extends javax.swing.JDialog {

    private String sortCheck = "All";

    public HocVienJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        cboChuyenDe = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        pnlHocVien = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHocVien = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        rdoChuaCoDiem = new javax.swing.JRadioButton();
        rdoDaCoDiem = new javax.swing.JRadioButton();
        rdoAll = new javax.swing.JRadioButton();
        btnRemoveHocVien = new javax.swing.JButton();
        btnUpdateDiem = new javax.swing.JButton();
        btnGuiMail = new javax.swing.JButton();
        pnlNguoiHoc = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnAddHocVien = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduVN - Quản lý học viên");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBackground(new java.awt.Color(255, 255, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("CHUYÊN ĐỀ"));
        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        cboChuyenDe.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboChuyenDeActionPerformed(evt);
            }
        });
        jPanel5.add(cboChuyenDe);

        jPanel1.add(jPanel5);

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("KHÓA HỌC"));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        cboKhoaHoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboKhoaHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhoaHocActionPerformed(evt);
            }
        });
        jPanel2.add(cboKhoaHoc);

        jPanel1.add(jPanel2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        pnlHocVien.setBackground(new java.awt.Color(255, 255, 153));
        pnlHocVien.setLayout(new java.awt.BorderLayout());

        tblHocVien.setBackground(new java.awt.Color(255, 255, 153));
        tblHocVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblHocVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "TT", "MÃ HV", "MÃ NH", "HỌ TÊN", "ĐIỂM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHocVien.setGridColor(new java.awt.Color(255, 0, 0));
        tblHocVien.setRowHeight(25);
        tblHocVien.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblHocVien.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(tblHocVien);

        pnlHocVien.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(0, 51, 102));

        buttonGroup1.add(rdoChuaCoDiem);
        rdoChuaCoDiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoChuaCoDiem.setForeground(new java.awt.Color(255, 255, 255));
        rdoChuaCoDiem.setText("Chưa có điểm");
        rdoChuaCoDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });
        jPanel4.add(rdoChuaCoDiem);

        buttonGroup1.add(rdoDaCoDiem);
        rdoDaCoDiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoDaCoDiem.setForeground(new java.awt.Color(255, 255, 255));
        rdoDaCoDiem.setText("Đã có điểm");
        rdoDaCoDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });
        jPanel4.add(rdoDaCoDiem);

        buttonGroup1.add(rdoAll);
        rdoAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoAll.setForeground(new java.awt.Color(255, 255, 255));
        rdoAll.setSelected(true);
        rdoAll.setText("Tất cả");
        rdoAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });
        jPanel4.add(rdoAll);

        btnRemoveHocVien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRemoveHocVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Delete.png"))); // NOI18N
        btnRemoveHocVien.setText("Xóa khỏi khóa học");
        btnRemoveHocVien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveHocVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveHocVienActionPerformed(evt);
            }
        });
        jPanel4.add(btnRemoveHocVien);

        btnUpdateDiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateDiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Edit.png"))); // NOI18N
        btnUpdateDiem.setText("Cập nhật điểm");
        btnUpdateDiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDiemActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdateDiem);

        btnGuiMail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuiMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Bell.png"))); // NOI18N
        btnGuiMail.setText("Gửi thông báo về mail");
        btnGuiMail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuiMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiMailActionPerformed(evt);
            }
        });
        jPanel4.add(btnGuiMail);

        pnlHocVien.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        tabs.addTab("HỌC VIÊN", pnlHocVien);

        pnlNguoiHoc.setBackground(new java.awt.Color(255, 255, 153));
        pnlNguoiHoc.setLayout(new java.awt.BorderLayout());

        tblNguoiHoc.setBackground(new java.awt.Color(255, 255, 153));
        tblNguoiHoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "GIỚI TÍNH", "NGÀY SINH", "ĐIỆN THOẠI", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNguoiHoc.setRowHeight(22);
        tblNguoiHoc.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblNguoiHoc.setShowHorizontalLines(true);
        jScrollPane3.setViewportView(tblNguoiHoc);

        pnlNguoiHoc.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnAddHocVien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddHocVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/edusys/icon/Add.png"))); // NOI18N
        btnAddHocVien.setText("Thêm vào khóa học");
        btnAddHocVien.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddHocVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHocVienActionPerformed(evt);
            }
        });
        jPanel3.add(btnAddHocVien);

        pnlNguoiHoc.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel6.setBackground(new java.awt.Color(255, 255, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));
        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });
        jPanel6.add(txtTimKiem);

        pnlNguoiHoc.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        tabs.addTab("NGƯỜI HỌC", pnlNguoiHoc);

        getContentPane().add(tabs, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cboChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboChuyenDeActionPerformed
        fillComboBoxKhoaHoc();
    }//GEN-LAST:event_cboChuyenDeActionPerformed

    private void cboKhoaHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhoaHocActionPerformed
        fillTableHocVien();
    }//GEN-LAST:event_cboKhoaHocActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        fillTableNguoiHoc();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnAddHocVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHocVienActionPerformed
        addHocVien();
    }//GEN-LAST:event_btnAddHocVienActionPerformed

    private void btnRemoveHocVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveHocVienActionPerformed
        removeHocVien();
    }//GEN-LAST:event_btnRemoveHocVienActionPerformed

    private void btnUpdateDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDiemActionPerformed
        updateDiem();
    }//GEN-LAST:event_btnUpdateDiemActionPerformed

    private void rdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoActionPerformed
        sortTable(evt.paramString());
    }//GEN-LAST:event_rdoActionPerformed

    private void btnGuiMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiMailActionPerformed
        int[] t = tblHocVien.getSelectedRows();
        if (t.length > 0) {
            actSend(t);
        } else {
            MsgBox.alert(this, "Vui lòng chọn học viên cần gửi mail");
        }
    }//GEN-LAST:event_btnGuiMailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HocVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HocVienJDialog dialog = new HocVienJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    ChuyenDeDAO cddao = new ChuyenDeDAO();
    KhoaHocDAO khdao = new KhoaHocDAO();
    NguoiHocDAO nhdao = new NguoiHocDAO();
    HocVienDAO hvdao = new HocVienDAO();
    int khCount;

    public void init() {
        fillComboBoxChuyenDe();
        DefaultTableCellRenderer render = new DefaultTableCellRenderer();
        render.setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel model = tblHocVien.getColumnModel();
        model.getColumn(0).setMaxWidth(40);
        model.getColumn(1).setMaxWidth(70);
        model.getColumn(2).setMaxWidth(80);
        model.getColumn(4).setMaxWidth(50);
        model.getColumn(0).setCellRenderer(render);
        model.getColumn(1).setCellRenderer(render);
        model.getColumn(4).setCellRenderer(render);
        this.getContentPane().setBackground(new Color(255, 255, 153));
        JTableHeader header = tblNguoiHoc.getTableHeader();
        header.setFont(new Font("segoe", Font.BOLD, 15));
        header.setForeground(new Color(51, 51, 51));
        JTableHeader header1 = tblHocVien.getTableHeader();
        header1.setFont(new Font("segoe", Font.BOLD, 15));
        header1.setForeground(new Color(51, 51, 51));
        jScrollPane1.setBorder(BorderFactory.createEmptyBorder());
    }

    public void fillComboBoxChuyenDe() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChuyenDe.getModel();
        model.removeAllElements();
        List<ChuyenDe> list = cddao.selectAll();
        for (ChuyenDe cd : list) {
            model.addElement(cd);
        }
    }

    public void fillComboBoxKhoaHoc() {
        khCount = -1;
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhoaHoc.getModel();
        model.removeAllElements();
        ChuyenDe chuyenDe = (ChuyenDe) cboChuyenDe.getSelectedItem();
        if (chuyenDe != null) {
            List<KhoaHoc> list = khdao.selectByChuyenDe(chuyenDe.getMaCD());
            for (KhoaHoc kh : list) {
                model.addElement(kh);
            }
            if (list.size() == 0) {
                khCount = -1;
            } else {
                khCount = list.size();
            }

            fillTableHocVien();
        }
    }

    Thread pThread = new Thread();

    public void fillTableHocVien() {
        // fix click quá nhanh vào sort kiểu điểm(đã có, chưa có, tất cả)          
        // Nếu bỏ qua if này. Thì thread sẽ được nạp vào liên tục => data đổ lên table sẽ sai       
        // Còn một số lỗi phát sinh nữa, nếu muốn tìm hiểu hãy bỏ đoạn if này và test
        if (pThread.isAlive()) {
            pThread.suspend();
        }

        pThread = new Thread() {
            public void run() {
                DefaultTableModel model = (DefaultTableModel) tblHocVien.getModel();
                model.setRowCount(0);
                KhoaHoc khoaHoc = (KhoaHoc) cboKhoaHoc.getSelectedItem();
                if (khoaHoc != null) {
                    List<HocVien> list = hvdao.selectByKhoaHoc(khoaHoc.getMaKH());
                    for (int i = 0; i < list.size(); i++) {
                        HocVien hv = list.get(i);
                        String hoten = nhdao.selectById(hv.getMaNH()).getHoTen();
                        if (sortCheck == "DCD" && hv.getDiem() == 0) {
                            continue;
                        } else if (sortCheck == "CCD" && hv.getDiem() > 0) {
                            continue;
                        }
                        model.addRow(new Object[]{
                            i + 1,
                            hv.getMaHV(),
                            hv.getMaNH(),
                            hoten,
                            hv.getDiem()
                        });
                    }
                    fillTableNguoiHoc();
                }
            }
        };
        pThread.start();
    }

    public void fillTableNguoiHoc() {
        DefaultTableModel model = (DefaultTableModel) tblNguoiHoc.getModel();
        model.setRowCount(0);
        KhoaHoc khoaHoc = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        String keyword = txtTimKiem.getText();
        List<NguoiHoc> list = nhdao.selectNotInCourse(khoaHoc.getMaKH(), keyword);
        for (NguoiHoc nh : list) {
            model.addRow(new Object[]{
                nh.getMaNH(),
                nh.getHoTen(),
                nh.getGioiTinh() ? "Nam" : "Nữ",
                nh.getNgaySinh(),
                nh.getDienThoai(),
                nh.getEmail()
            });
        }
    }

    public void addHocVien() {
        KhoaHoc khoaHoc = (KhoaHoc) cboKhoaHoc.getSelectedItem();
        int[] rows = tblNguoiHoc.getSelectedRows();
        for (int row : rows) {
            String manh = (String) tblNguoiHoc.getValueAt(row, 0);
            HocVien hv = new HocVien();
            hv.setMaKH(khoaHoc.getMaKH());
            hv.setDiem(0);
            hv.setMaNH(manh);
            hvdao.insert(hv);
        }
        fillTableHocVien();
        tabs.setSelectedIndex(0);
    }

    public void removeHocVien() {
        if (!Auth.isManager()) {
            MsgBox.alert(this, "Bạn không có quyền xóa học viên!");
        } else {
            int[] rows = tblHocVien.getSelectedRows();
            if (rows.length > 0
                    && MsgBox.confirm(this, "Bạn muốn xóa các học viên được chọn?")) {
                for (int row : rows) {
                    int mahv = (Integer) tblHocVien.getValueAt(row, 1);
                    hvdao.delete(mahv);
                }
                fillTableHocVien();
            }
        }
    }

    public void updateDiem() {
        int n = tblHocVien.getRowCount();
        for (int i = 0; i < n; i++) {
            int mahv = (Integer) tblHocVien.getValueAt(i, 1);
            double diem = (Double) tblHocVien.getValueAt(i, 4);
            if (diem > 10 || diem < 0) {
                continue;
            }
            HocVien hv = hvdao.selectById(mahv);
            hv.setDiem(diem);
            hvdao.update(hv);
        }
        MsgBox.alert(this, "Cập nhật điểm thành công!");

    }

    public void actSend(int[] t) {
        XVerify.WaitVerifyMailer();
        for (int i = 0; i < t.length; i++) {
            double diem = (double) tblHocVien.getValueAt(t[i], 4);
            String hoten = tblHocVien.getValueAt(t[i], 3).toString();
            String manh = tblHocVien.getValueAt(t[i], 2).toString();
            NguoiHoc nguoiHoc = nhdao.selectById(manh);
            String mail = nguoiHoc.getEmail().trim();
            String content = "Xin chào " + hoten + " - Mã NH: " + manh + "\n\n"
                + "Khóa học: " + cboKhoaHoc.getSelectedItem().toString() + ". Đã có điểm!\n"
                + "Điểm của bạn là: " + diem + "\n\n\n"
                + "**Đây là mail tự động của hệ thống. Vui lòng không phản hồi mail này!";
            try {
                XMail.sendMail(mail, content, "Hệ thống thông báo điểm");        
            } catch (Exception e) {
                MsgBox.alert(this, e.getMessage());
                return;
            }
            if(XVerify.GetVerifyMailer() == "0") {
                MsgBox.alert(this, XVerify.GetExceptionMailer());
                break;
            }
        }
        if(XVerify.GetVerifyMailer() == "1") {
            MsgBox.alert(this, "Đã gửi thư");
        }
    }

    public void sortTable(String s) {
        if (s.contains("Đã có điểm")) {
            sortCheck = "DCD";
        } else if (s.contains("Chưa có điểm")) {
            sortCheck = "CCD";
        } else {
            sortCheck = "All";
        }
        fillTableHocVien();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddHocVien;
    private javax.swing.JButton btnGuiMail;
    private javax.swing.JButton btnRemoveHocVien;
    private javax.swing.JButton btnUpdateDiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboChuyenDe;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlHocVien;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JRadioButton rdoAll;
    private javax.swing.JRadioButton rdoChuaCoDiem;
    private javax.swing.JRadioButton rdoDaCoDiem;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHocVien;
    private javax.swing.JTable tblNguoiHoc;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

}
